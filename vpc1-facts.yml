- name: This playbook allows to gather facts about VPC1 and its elements
  hosts: localhost
  connection: local
  gather_facts: false

  vars:

    vpc_name: "VPC1 by Ansible"
    igw_name: "VPC1 IGW by Ansible"
    sg_name: 'VPC1 Public SG by Ansible'
    route_table_name: "VPC1 Internet RT by Ansible"
    region: 'us-east-2'



  tasks:

#Note ec2_vpc_net_facts, ec2_vpc_subnet_facts and ec2_vpc_igw_facts used below may be called 
#ec2_vpc_net_info, ec2_vpc_subnet_info and ec2_vpc_igw_info respectively depending on the Ansible version


##################VPC section##################
# find the VPC by name
  - name: VPC facts
    ec2_vpc_net_facts:
      filters:
        "tag:Name": "{{ vpc_name }}"
    register: vpc_facts
    tags: vpc

# print all info abut the vpc
  - debug:
      var: vpc_facts
    tags: vpc


# print specific info about the vpc
  - debug:
      msg:
      - "The vpc id is: {{ vpc_facts.vpcs[0].id }}"
      - "The vpc name is: {{ vpc_facts.vpcs[0].tags.Name }}"
    tags: vpc




##################Subnets section##################
# find the subnets facts
  - name: VPC subnet facts
    ec2_vpc_subnet_facts:
      filters:
        vpc-id: "{{ vpc_facts.vpcs[0].id }}"
    register: vpc_subnet_facts
    tags: subnets

# print all info about subnet1
  - debug:
      var: vpc_subnet_facts.subnets[0]
    tags: subnets

# print all info about subnet2
  - debug:
      var: vpc_subnet_facts.subnets[1]
    tags: subnets


# print specific info about both subnets
  - debug:
      msg:
      - "The name for the first subnet is: {{ vpc_subnet_facts.subnets[0].tags.Name }}"
      - "The id for first subnet is: {{ vpc_subnet_facts.subnets[0].id }}"
      - "The name for the second subnet is: {{ vpc_subnet_facts.subnets[1].tags.Name }}"
      - "The id for second subnet is: {{ vpc_subnet_facts.subnets[1].id }}"
    tags: subnets




##################IGW section##################
# find the igw facts
  - name: Gather information about the Internet Gateway
    ec2_vpc_igw_facts:
      region: "{{region}}"
      filters:
        "tag:Name": "{{igw_name}}"
    register: igw_info
    tags: igw

# extract the IGW ID from facts
  - name: "set fact: VPC IGW"
    set_fact:
      igw_id: "{{ igw_info.internet_gateways[0].internet_gateway_id }}"
    tags: igw


# print all info about igw 
  - debug:
      var: igw_info
    tags: igw


# print specific info about the igw
  - debug:
      msg:
      - "The id for the IGW is: {{ igw_id }}"
    tags: igw





##################Route Table section##################
# find the route table facts
  - name: Gather information about the route table
    ec2_vpc_route_table_facts:
      region: "{{region}}"
      filters:
        "tag:Name": "{{ route_table_name }}"
    register: route_table_info
    tags: routetable

# extract the RT ID from facts
  - name: "set fact: VPC Public Route Table"
    set_fact:
      route_table_id: "{{ route_table_info.route_tables[0].id }}"
    tags: routetable

# print all info about the RT
  - debug:
      var: route_table_info
    tags: routetable

# print specific info about the RT
  - debug:
      msg:
      - "The id for the RT is: {{ route_table_id }}"
    tags: routetable




##################SG section##################
# find the SG facts
  - name: Gather information about the SG
    ec2_group_facts:
      filters:
        group-name: "{{ sg_name }}"
    register: sg_info
    tags: sg

# extract the SG ID from facts
  - name: "set fact: VPC Public SG"
    set_fact:
      sg_id: "{{ sg_info.security_groups[0].group_id }}"
    tags: sg

# print all info about the SG
  - debug:
      var: sg_info
    tags: sg

# print specific info about the SG
  - debug:
      msg:
      - "The id for the SG is: {{ sg_id }}"
    tags: sg



##################EC2 section##################
# find the EC2 instances facts
  - name: Gather information about the EC2 instances
    ec2_instance_facts:
      filters:
        vpc-id: "{{ vpc_facts.vpcs[0].id }}"
    register: ec2_info
    tags: ec2

# print all info about the EC2 instances
  - debug:
      var: ec2_info
    tags: ec2

# print specific info about the EC2 instances
  - debug:
      msg:
      - "The id for first ec2 is: {{ ec2_info.instances[0].instance_id }}"
      - "The name for the first ec2 is: {{ ec2_info.instances[0].tags.Name }}"
      - "The id for second ec2 is: {{ ec2_info.instances[1].instance_id }}"
      - "The name for the second ec2 is: {{ ec2_info.instances[1].tags.Name }}"
    tags: ec2

